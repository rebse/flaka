<project xmlns:c="antlib:net.haefelingerit.flaka">
	<property name="Z" value="zzz" />
	<property name="comment" value=";" />
	<c:set comment="${comment}">
		s = '${Z}'
		f = '${ant.file}'
		F = '#{f}'
	</c:set>
	<echo>
		s = ${s}
	</echo>
	<c:echo>
		s = ${s}
		f = #{f}
		F = #{F}
	</c:echo>
	<c:set comment=";">
		;; set variable x \\
		to false
		x= \
		false
	</c:set>
	<c:set comment="#"># set property x
		x:=false</c:set>
	<c:echo>
		var x = #{x}
		property x = ${x}
	</c:echo>
	<!--  check that var.x and property.x exist -->
	<c:unless test="has.var.x">
		<fail message="[0a] but var x must exist by now." />
	</c:unless>
	<c:unless test="has.property.x">
		<fail message="[0a] but property x must exist by now." />
	</c:unless>

	<c:set>
		z = false
	</c:set>
	<c:unless test="has.var.z">
		<fail message="[1a] but z is a *existing* reference" />
	</c:unless>
	<c:when test="not has.var.z">
		<fail message="[2b] but z is a *existing* reference" />
	</c:when>
	<c:set>
		z = null
	</c:set>
	<c:when test="has.var.z">
		<c:echo>#{reference}</c:echo>
		<fail message="[2a] but z is a *non existing* reference" />
	</c:when>
	<c:unless test="not has.var.z">
		<fail message="[2b] but z is a *non existing* reference" />
	</c:unless>

	<c:when test="''">
		<fail message="[3a]  but z is the empty string (=> false)" />
	</c:when>
	<c:when test="not ' ' ">
		<fail message="[3b]  but ' ' is a non empty string" />
	</c:when>

	<c:when test="has.property.z">
		<fail message="[4a]  but property z does not exist" />
	</c:when>
	<c:unless test="not has.property.z">
		<fail message="[4b]  but property z does not exist" />
	</c:unless>

	<c:set>
		f = '${ant.file}'.tofile
	</c:set>
	
	<c:when test="not f">
		<fail message="[5a]  but f is an existing file" />
	</c:when>
	<c:unless test="f">
		<fail message="[5b]  but f is an existing file" />
	</c:unless>
	<c:set>
		f = '--${ant.file}'.tofile
	</c:set>
	<c:when test="f">
		<fail message="[6a] does not exist" />
	</c:when>
	<c:unless test="not f">
		<fail message="[6b]  but f is an existing file" />
	</c:unless>
	<c:set>
		b = false
	</c:set>
	<c:when test="b">
		<fail message="[7a] but b must evaluate to false" />
	</c:when>
	<c:unless test="not b">
		<fail message="[7b] but b must evaluate to false" />
	</c:unless>

</project>